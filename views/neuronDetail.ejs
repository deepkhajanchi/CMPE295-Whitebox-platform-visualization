<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <meta name="author" content="">
  <link rel="icon" href="/docs/4.0/assets/img/favicons/favicon.ico">

  <title>Dashboard</title>

  <link rel="canonical" href="https://getbootstrap.com/docs/4.0/examples/dashboard/">

  <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>

  <!-- Bootstrap core CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
    integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

  <!-- Custom styles for this template -->
  <link href="css/dashboard.css" rel="stylesheet">

  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.5.0/css/all.css" integrity="sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU" crossorigin="anonymous">
</head>

<body>
  <%- include('navBar.ejs') -%>

  <div class="container-fluid">
    <div class="row">
      <%- include ('sideBar.ejs')-%>

      <main role="main" class="col-md-9 ml-sm-auto col-lg-10 pt-3 px-4">
        <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom">
          <h1 class="h2">Neuron Detail</h1>
          <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group mr-2">
              <button class="btn btn-sm btn-outline-secondary">Share</button>
              <button class="btn btn-sm btn-outline-secondary">Export</button>
            </div>
          </div>
        </div>

        <div class="card-deck">
          <!-- Layer Box -->
          <div class="card" style="width: 18rem;">
            <div class="card-body">
              <h5 class="card-title">Id</h5>
              <h6 class="card-subtitle mb-2 text-muted"><%- id %></h6>
            </div>
          </div>

          <!-- Layer Box -->
          <div class="card" style="width: 18rem;">
            <div class="card-body">
              <h5 class="card-title">Layer</h5>
              <h6 class="card-subtitle mb-2 text-muted"><%- layer.name %></h6>
            </div>
          </div>

          <!-- Activation function Box -->
          <div class="card" style="width: 18rem;">
            <div class="card-body">
              <h5 class="card-title">Activation Function</h5>
              <h6 class="card-subtitle mb-2 text-muted"><%- activationFunction %></h6>
            </div>
          </div>

          <!-- Bias Box -->
          <div class="card" style="width: 18rem;">
            <div class="card-body">
              <h5 class="card-title">Bias</h5>
              <h6 class="card-subtitle mb-2 text-muted"><%- bias %></h6>
            </div>
          </div>
        </div>
        <br>
        <div class="card-deck">
          <!-- Model Box -->
          <div class="card" style="width: 18rem;">
            <div class="card-body">
              <h5 class="card-title">Model</h5>
              <h6 class="card-subtitle mb-2 text-muted"><%- model.name %></h6>
            </div>
          </div>

          <!-- configuration Box -->
          <div class="card" style="width: 18rem;">
            <div class="card-body">
              <h5 class="card-title">Configuration</h5>
              <h6 class="card-subtitle mb-2 text-muted"><%- configuration.name %></h6>
            </div>
          </div>

          <!-- Test Box -->
          <div class="card" style="width: 18rem;">
            <div class="card-body">
              <h5 class="card-title">Test</h5>
              <h6 class="card-subtitle mb-2 text-muted"><%- test.name %></h6>
            </div>
          </div>

          <!-- Output Box -->
          <div class="card" style="width: 18rem;">
            <div class="card-body">
              <h5 class="card-title">Output</h5>
              <h6 class="card-subtitle mb-2 text-muted"><%- output %></h6>
            </div>
          </div>
        </div>

        <br>
        <!-- <canvas class="my-4" id="myChart" width="900" height="380"></canvas> -->

        <h2>Input</h2>
        <div class="table-responsive">
          <table class="table table-striped table-sm">
            <thead>
              <tr>
                <th>From Neuron</th>
                <th>Layer</th>
                <th>Weight</th>
                <th>Value</th>
              </tr>
            </thead>
            <tbody id="inputTableBody">
              <% input.forEach((item) => { %>
              <tr>
                <td><a href="/tests/<%- test.id %>/result/layers/<%- item.layer.id %>/neurons/<%- item.id %>"><%- item.id %></a></td>
                <td><a href="/tests/<%- test.id %>/result/layers/<%- item.layer.id %>"><%- item.layer.name %></a></td>
                <td><i class="fas fa-circle" style="color:<%- getColorForPercentage((item.weight + 1) / 2) %>"></i>  <%- item.weight %></td>
                <td><i class="fas fa-circle" style="color:<%- getColorForPercentage((item.value + 1) / 2) %>"></i>  <%- item.value %></td>
              </tr>
              <% }) %>

            </tbody>
          </table>
        </div>

        <canvas id="inputChart"></canvas>

        <h2>Ouput Link</h2>
        <div class="table-responsive">
          <table class="table table-striped table-sm">
            <thead>
              <tr>
                <th>To Neuron</th>
                <th>Layer</th>
                <th>Weight</th>
              </tr>
            </thead>
            <tbody id="inputTableBody">
              <% outputs.forEach((item) => { %>
              <tr>
                <td><a href="/tests/<%- test.id %>/result/layers/<%- item.layer.id %>/neurons/<%- item.id %>"><%- item.id %></a></td>
                <td><a href="/tests/<%- test.id %>/result/layers/<%- item.layer.id %>"><%- item.layer.name %></a></td>
                <td><i class="fas fa-circle" style="color:<%- getColorForPercentage((item.weight + 1) / 2) %>"></i>   <%- item.weight %></td>
              </tr>
              <% }) %>

            </tbody>
          </table>
        </div>
        <canvas id="outputChart"></canvas>
      </main>
    </div>
  </div>

  <!-- Rendering script -->
  <script>
    let payload = <%= JSON.stringify(input) %>
      console.log("input: " + JSON.stringify(payload, null, 4))
  </script>


  <!-- Bootstrap core JavaScript
    ================================================== -->
  <!-- Placed at the end of the document so the pages load faster -->
  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
    integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
    crossorigin="anonymous"></script>
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
    integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
    integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
    crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
    integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
    crossorigin="anonymous"></script>

  <!-- Icons -->
  <script src="https://unpkg.com/feather-icons/dist/feather.min.js"></script>
  <script>
    feather.replace()
  </script>

  <!-- Graphs -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js"></script>
  <script>
    var ctx = document.getElementById("myChart");
    var myChart = new Chart(ctx, {
      type: 'line',
      data: {
        labels: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
        datasets: [{
          data: [15339, 21345, 18483, 24003, 23489, 24092, 12034],
          lineTension: 0,
          backgroundColor: 'transparent',
          borderColor: '#007bff',
          borderWidth: 4,
          pointBackgroundColor: '#007bff'
        }]
      },
      options: {
        scales: {
          yAxes: [{
            ticks: {
              beginAtZero: false
            }
          }]
        },
        legend: {
          display: false,
        }
      }
    });
  </script>

  <script>
    var ctx1 = document.getElementById('inputChart').getContext('2d');
    var ctx2 = document.getElementById('outputChart').getContext('2d');

    let input = <%- JSON.stringify(input) %>;
    let outputs = <%- JSON.stringify(outputs) %>;
    

    var inputChart = new Chart(ctx1, {
        // The type of chart we want to create
        type: 'line',

        // The data for our dataset
        data: {
            labels: input.map(function(item){ return item.id }),
            datasets: [{
                label: 'Weight',
                backgroundColor: 'transparent',
                borderColor: '#007bff',
                data: input.map(function(item){ return item.weight })
            },{
                label: 'Output',
                backgroundColor: 'transparent',
                borderColor: '#007777',
                data: input.map(function(item){ return item.value })
            }]
        },

        // Configuration options go here
        options: {
          tooltips: {
            mode: 'point'
        }
        }
    });


    var outputChart = new Chart(ctx2, {
        // The type of chart we want to create
        type: 'line',

        // The data for our dataset
        data: {
            labels: outputs.map(function(item){ return item.id }),
            datasets: [{
                label: 'Weight',
                backgroundColor: 'transparent',
                borderColor: '#007bff',
                data: outputs.map(function(item){ return item.weight })
            }]
        },

        // Configuration options go here
        options: {
          tooltips: {
            mode: 'point'
        }
        }
    });
  </script>

  <script>
    var percentColors = [
        { pct: 0.0, color: { r: 0xff, g: 0x00, b: 0 } },
        { pct: 0.5, color: { r: 0xff, g: 0xff, b: 0 } },
        { pct: 1.0, color: { r: 0x00, g: 0xff, b: 0 } } ];

    var getColorForPercentage = function(pct) {
        for (var i = 1; i < percentColors.length - 1; i++) {
            if (pct < percentColors[i].pct) {
                break;
            }
        }
        var lower = percentColors[i - 1];
        var upper = percentColors[i];
        var range = upper.pct - lower.pct;
        var rangePct = (pct - lower.pct) / range;
        var pctLower = 1 - rangePct;
        var pctUpper = rangePct;
        var color = {
            r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),
            g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),
            b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper)
        };
        return 'rgb(' + [color.r, color.g, color.b].join(',') + ')';
        // or output as hex if preferred
    };
  </script>
</body>

</html>